var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [BinnedModels]\nOrder = [:module, :type, :constant, :macro, :function]","category":"page"},{"location":"api/#BinnedModels.BinnedModels","page":"API","title":"BinnedModels.BinnedModels","text":"BinnedModels\n\nA Julia package for statistical modeling of binned data, e.g. histograms.\n\n\n\n\n\n","category":"module"},{"location":"api/#BinnedModels.BinEdges","page":"API","title":"BinnedModels.BinEdges","text":"BinEdges{T<:Number} = AbstractVector{T}\n\nRepresentation of a binning with n bins as n+1 edge points.\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.BinnedModel","page":"API","title":"BinnedModels.BinnedModel","text":"struct BinnedModels.BinnedModel\n\nRespresents a statistical model for binned data.\n\nUser code should not instantiate BinnedModel directly, but use binned_model instead.\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.Binning","page":"API","title":"BinnedModels.Binning","text":"Binning{T<:Number} = AbstractVector{<:AbstractInterval{T}}\n\nRepresentation of a binning as a vector of intervals.\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.BinningAlgorithm","page":"API","title":"BinnedModels.BinningAlgorithm","text":"abstract type BinningAlgorithm\n\nAbstract type for for algorithms that determine a suitable binning for a given set of data.\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.FixedNBins","page":"API","title":"BinnedModels.FixedNBins","text":"FixedNBins(nbins::Int)\n\nSelects a fixed number of bins.\n\nConstructor: FixedNBins(; fields...)\n\nFields:\n\nnbins::Int64\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.FreedmanDiaconisBinning","page":"API","title":"BinnedModels.FreedmanDiaconisBinning","text":"struct FreedmanDiaconisBinning <: BinningAlgorithm\n\nSelects automatic binning based on the Freedmanâ€“Diaconis rule.\n\nConstructor: FreedmanDiaconisBinning()\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.RiceBinning","page":"API","title":"BinnedModels.RiceBinning","text":"struct RiceBinning <: BinningAlgorithm\n\nSelects automatic binning based on the Rice rule.\n\nConstructor: RiceBinning()\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.ScottBinning","page":"API","title":"BinnedModels.ScottBinning","text":"struct ScottBinning <: BinningAlgorithm\n\nSelects automatic binning based on Scott's normal reference rule.\n\nConstructor: ScottBinning()\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.SquareRootBinning","page":"API","title":"BinnedModels.SquareRootBinning","text":"struct SquareRootBinning <: BinningAlgorithm\n\nSelects automatic binning based on the Square-root choice.\n\nConstructor: SquareRootBinning()\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.SturgesBinning","page":"API","title":"BinnedModels.SturgesBinning","text":"struct SturgesBinning <: BinningAlgorithm\n\nSelects automatic binning based on Sturges' formula.\n\nConstructor: SturgesBinning()\n\n\n\n\n\n","category":"type"},{"location":"api/#BinnedModels.bin_centers","page":"API","title":"BinnedModels.bin_centers","text":"bin_centers(binnig::Binning)\nbin_centers(edges::BinEdges)\n\nReturns the bin centers of a binning defined by a vector of edges.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.bin_intervals","page":"API","title":"BinnedModels.bin_intervals","text":"function bin_intervals(edges::BinEdges, closed::Val = Val(:closedleft))::Binning\n\nReturns a vector of n bin intervals, derived from a vector of n+1 bin edges.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.bin_leftedges","page":"API","title":"BinnedModels.bin_leftedges","text":"bin_leftedges(edges::BinEdges)\nbin_leftedges(binnig::Binning)\n\nReturns the left edges of a binning defined by a vector of edges.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.bin_rightedges","page":"API","title":"BinnedModels.bin_rightedges","text":"bin_rightedges(edges::BinEdges)\nbin_rightedges(binnig::Binning)\n\nReturns the right edges of a binning defined by a vector of edges.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.bin_widths","page":"API","title":"BinnedModels.bin_widths","text":"bin_widths(binnig::Binning)\nbin_widths(binning::BinEdges)\n\nReturns the bin widths of a binning defined by a vector of edges.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.binned_likelihood","page":"API","title":"BinnedModels.binned_likelihood","text":"binned_likelihood(f_expectation, edges::Tuple{AbstractVector,...}, data::AbstractVector{<:Integer})\nbinned_likelihood(f_expectation, h::StatsBase.Histogram{<:Integer})\n\nConstructs a binned likelihood object that is compatible with the DensityInterface API.\n\nSee also binned_model.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.binned_model","page":"API","title":"BinnedModels.binned_model","text":"binned_model(f_expectation, edges::Tuple{AbstractVector,...})\n\nCreate a staticstical binned model from an density expectation function f_expectation and a tuple of bin edges edges.\n\nSee also binned_likelihood.\n\n\n\n\n\n","category":"function"},{"location":"api/#BinnedModels.fit_binedges","page":"API","title":"BinnedModels.fit_binedges","text":"fit_binedges(data::AbstractVector{<:Real})::BinEdges\nfit_binedges(data::NTuple{N,AbstractVector{<:Real}})::NTuple{N,BinEdges}\n\nReturn suitable bin edges for data, using algorithm.\n\ndata may be a real-valued vector, or a tuple of real-valued vectors for multi-dimensional data.\n\n\n\n\n\n","category":"function"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE.md\"))","category":"page"},{"location":"#BinnedModels.jl","page":"Home","title":"BinnedModels.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package provides tools to statistically model binned data, e.g. histograms.","category":"page"}]
}
